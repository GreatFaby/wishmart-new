{"version":3,"sources":["store/actions/types.js","components/Navigation/Navigation.js","components/Footer/Footer.js","components/Spinner/Spinner.js","components/Products/Edit/Edit.js","containers/NewProduct/NewProduct.js","store/actions/newProduct.js","utils/requireAuth.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/cart.js","utils/rootReducer.js","index.js","axios-orders.js","utils/setAuthorization.js","store/actions/login.js"],"names":["SET_CURRENT_USER","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","connect","state","auth","logout","props","useState","isOpen","setIsOpen","isAuthenticated","userLinks","right","active","to","onClick","event","preventDefault","nav","caret","className","href","guestLinks","color","dark","expand","id","navbar","Foot","styled","MDBFooter","Footer","fluid","Date","getFullYear","style","position","top","left","transform","Spinner","role","Edit","name","setName","brand","setBrand","price","setPrice","image","setImage","description","setDescription","useEffect","a","axios","get","match","params","response","data","console","log","fetchData","handleSubmit","obj","token","localStorage","getItem","patch","headers","Authorization","history","push","xl","onSubmit","label","value","icon","group","type","validate","error","success","onChange","target","newProduct","dispatch","post","redirect","setRedirect","sm","md","lg","ComposedComponent","useLayoutEffect","Home","React","lazy","Register","Login","Products","Cart","Show","CheckOut","Pay","App","routes","path","exact","render","component","requireAuth","NewProduct","fallback","Boolean","window","location","hostname","initialState","user","initState","addedItems","total","addCart","action","find","item","_id","quantity","newTotal","removeCart","itemToRemove","new_items","filter","incQty","addedItem","decQty","cart","combineReducers","isEmpty","composeEnhancers","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","compose","store","createStore","rootReducer","applyMiddleware","thunk","jwtToken","setAuthorizationToken","setCurrentUser","jwtDecode","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","instance","create","baseURL","defaults","common","removeItem","login","res","setItem","jwt","decode"],"mappings":"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","file":"static/js/main.6394e485.chunk.js","sourcesContent":["export const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\n","import React, { useState } from 'react';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../store/actions/login';\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n} from 'mdbreact';\n\nconst Navigation = props => {\n  const logout = event => {\n    event.preventDefault();\n    props.logout();\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleCollapse = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const { isAuthenticated } = props.auth;\n\n  const userLinks = (\n    <MDBNavbarNav right>\n      <MDBNavItem active>\n        <MDBNavLink to=\"/\">Home</MDBNavLink>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBNavLink to=\"/Products\">Products</MDBNavLink>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBNavLink to=\"/logout\" onClick={logout}>\n          Logout\n        </MDBNavLink>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBNavLink to=\"/cart\">Cart</MDBNavLink>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBDropdown>\n          <MDBDropdownToggle nav caret>\n            <span className=\"mr-2\">Profile</span>\n          </MDBDropdownToggle>\n          <MDBDropdownMenu>\n            <MDBDropdownItem href=\"#!\">Orders</MDBDropdownItem>\n            <MDBDropdownItem href=\"#!\">Account</MDBDropdownItem>\n          </MDBDropdownMenu>\n        </MDBDropdown>\n      </MDBNavItem>\n    </MDBNavbarNav>\n  );\n\n  const guestLinks = (\n    <MDBNavbarNav right>\n      <MDBNavItem active>\n        <MDBNavLink to=\"/\">Home</MDBNavLink>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBNavLink to=\"/Products\">Products</MDBNavLink>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBNavLink to=\"/login\">Login</MDBNavLink>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBNavLink to=\"/register\">Sign Up</MDBNavLink>\n      </MDBNavItem>\n    </MDBNavbarNav>\n  );\n\n  return (\n    <MDBNavbar color=\"indigo\" dark expand=\"md\">\n      <MDBNavbarBrand>\n        <MDBNavLink to=\"/\">\n          <strong className=\"white-text\">Wishmart</strong>\n        </MDBNavLink>\n      </MDBNavbarBrand>\n      <MDBNavbarToggler onClick={toggleCollapse} />\n      <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\n        <MDBNavbarNav right>\n          {isAuthenticated ? userLinks : guestLinks}\n        </MDBNavbarNav>\n      </MDBCollapse>\n    </MDBNavbar>\n  );\n};\n\nNavigation.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Navigation);\n","import React from 'react';\nimport { MDBContainer, MDBFooter } from 'mdbreact';\nimport styled from 'styled-components';\n\nconst Foot = styled(MDBFooter)`\n  position: relative;\n  width: 100%;\n  background-color: #3f51b5;\n`;\n\nconst Footer = () => {\n  return (\n    <Foot className=\"font-small pt-4 mt-4\">\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright:{' '}\n          {/* <a href=\"https://www.MDBootstrap.com\"> MDBootstrap.com </a> */}\n          <p className=\"text-monospace\">\n            {' '}\n            Wishmart Designed by Oluwafemi Egbodofo with Stutord\n          </p>\n        </MDBContainer>\n      </div>\n    </Foot>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nconst style = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n};\n\nconst Spinner = () => {\n  return (\n    <div style={style}>\n      <div className=\"spinner-border text-danger\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect } from 'react';\nimport axios from '../../../axios-orders';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst Edit = props => {\n  const [name, setName] = useState('');\n  const [brand, setBrand] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleNameChange = event => setName(event.target.value);\n  const handleBrandChange = event => setBrand(event.target.value);\n  const handlePriceChange = event => setPrice(event.target.value);\n  const handleImageChange = event => setImage(event.target.value);\n  const handleDescriptionChange = event => setDescription(event.target.value);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('products/' + props.match.params.id);\n        setName(response.data.name);\n        setBrand(response.data.brand);\n        setPrice(response.data.price);\n        setImage(response.data.image);\n        setDescription(response.data.description);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [props]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const obj = {\n      name: name,\n      brand: brand,\n      price: price,\n      image: image,\n      description: description,\n    };\n    const token = localStorage.getItem('jwtToken');\n    await axios.patch('/products/' + props.match.params.id, obj, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    props.history.push('/products/' + props.match.params.id + '/show');\n  };\n\n  return (\n    <MDBContainer className=\"px-5\">\n      <MDBRow className=\"d-flex justify-content-center\">\n        <MDBCol className=\"card mt-5\" xl=\"6\">\n          <form onSubmit={handleSubmit}>\n            <p className=\"h5 text-center mt-4 mb-4\">Edit Product</p>\n            <div className=\"grey-text\">\n              <MDBInput\n                label=\"Name\"\n                value={name}\n                icon=\"user\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                onChange={handleNameChange}\n              />\n              <MDBInput\n                label=\"Brand\"\n                value={brand}\n                icon=\"clone\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                onChange={handleBrandChange}\n              />\n              <MDBInput\n                label=\"Price\"\n                value={price}\n                icon=\"coins\"\n                group\n                type=\"number\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                onChange={handlePriceChange}\n              />\n              <MDBInput\n                label=\"image\"\n                value={image}\n                icon=\"image\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                onChange={handleImageChange}\n              />\n              <MDBInput\n                label=\"description\"\n                value={description}\n                icon=\"info\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                onChange={handleDescriptionChange}\n              />\n            </div>\n            <div className=\"text-center\">\n              <MDBBtn className=\"mb-3\" color=\"cyan\" type=\"submit\">\n                Submit\n              </MDBBtn>\n            </div>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default Edit;\n","import React, { useState } from 'react';\nimport { newProduct } from '../../store/actions/newProduct';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst Add = props => {\n  const [name, setName] = useState('');\n  const [brand, setBrand] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [description, setDescription] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  const handleNameChange = event => setName(event.target.value);\n  const handleBrandChange = event => setBrand(event.target.value);\n  const handlePriceChange = event => setPrice(event.target.value);\n  const handleImageChange = event => setImage(event.target.value);\n  const handleDescriptionChange = event => setDescription(event.target.value);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = {\n      name,\n      brand,\n      price,\n      image,\n      description,\n    };\n\n    try {\n      await props.newProduct(data);\n      setRedirect(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (redirect) {\n    return <Redirect to={'/products'} />;\n  }\n\n  return (\n    <MDBContainer className=\"px-5\">\n      <MDBRow className=\"d-flex justify-content-center\">\n        <MDBCol className=\"card mt-3\" sm=\"12\" md=\"8\" lg=\"6\">\n          <form onSubmit={handleSubmit}>\n            <p className=\"h5 text-center mt-4 mb-4\">Add New Product</p>\n            <div className=\"grey-text\">\n              <MDBInput\n                label=\"Name\"\n                icon=\"user\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                onChange={handleNameChange}\n              />\n              <MDBInput\n                label=\"Brand\"\n                icon=\"clone\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                onChange={handleBrandChange}\n              />\n              <MDBInput\n                label=\"Price\"\n                icon=\"coins\"\n                group\n                type=\"number\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                onChange={handlePriceChange}\n              />\n              <MDBInput\n                label=\"image\"\n                icon=\"image\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                onChange={handleImageChange}\n              />\n              <MDBInput\n                label=\"description\"\n                icon=\"info\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                onChange={handleDescriptionChange}\n              />\n            </div>\n            <div className=\"text-center\">\n              <MDBBtn className=\"mb-3\" color=\"cyan\" type=\"submit\">\n                Submit\n              </MDBBtn>\n            </div>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nAdd.propTypes = {\n  newProduct: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  { newProduct }\n)(Add);\n","import axios from '../../axios-orders';\n\nexport function newProduct(event) {\n  return dispatch => {\n    const token = localStorage.getItem('jwtToken');\n    return axios.post('/products', event, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  };\n}\n","import React, { useLayoutEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport default function(ComposedComponent) {\n  const Authenticate = props => {\n    useLayoutEffect(() => {\n      if (!props.isAuthenticated) {\n        props.history.push('/login');\n      }\n    }, [props]);\n\n    return <ComposedComponent {...props} />;\n  };\n\n  Authenticate.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n  };\n\n  const mapStateToProps = state => {\n    return {\n      isAuthenticated: state.auth.isAuthenticated,\n    };\n  };\n\n  return connect(mapStateToProps)(Authenticate);\n}","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Navigation from './components/Navigation/Navigation';\nimport Footer from './components/Footer/Footer';\nimport Spinner from './components/Spinner/Spinner';\nimport Edit from './components/Products/Edit/Edit';\nimport NewProduct from './containers/NewProduct/NewProduct';\n\nimport requireAuth from './utils/requireAuth';\n\nconst Home = React.lazy(() => {\n  return import('./components/Home/Home');\n});\n\nconst Register = React.lazy(() => {\n  return import('./components/Register/RegisterPage');\n});\n\nconst Login = React.lazy(() => {\n  return import('./containers/Login/Login');\n});\n\nconst Products = React.lazy(() => {\n  return import('./components/Products/Products');\n});\n\nconst Cart = React.lazy(() => {\n  return import('./components/Cart/Cart');\n});\n\n// const Edit = React.lazy(() => {\n//   return import('./components/Products/Edit/Edit');\n// });\n\nconst Show = React.lazy(() => {\n  return import('./components/Products/Show/Show');\n});\n\n// const NewProduct = React.lazy(() => {\n//   return import('./containers/NewProduct/NewProduct');\n// });\n\nconst CheckOut = React.lazy(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nconst Pay = React.lazy(() => {\n  return import('./containers/Pay/Pay');\n});\n\nfunction App() {\n  let routes = (\n    <Switch>\n      <Route path=\"/\" exact render={props => <Home {...props} />} />\n      <Route path=\"/register\" exact render={props => <Register {...props} />} />\n      <Route path=\"/login\" exact render={props => <Login {...props} />} />\n      <Route path=\"/products\" exact render={props => <Products {...props} />} />\n      <Route path=\"/cart\" exact render={props => <Cart {...props} />} />\n      <Route path=\"/checkout\" exact render={props => <CheckOut {...props} />} />\n      <Route path=\"/pay\" exact render={props => <Pay {...props} />} />\n      {/* <Route\n        path=\"/products/:id/edit\"\n        exact\n        render={props => <Edit {...props} />}\n      /> */}\n      <Route path=\"/products/:id/edit\" component={requireAuth(Edit)} />\n      <Route path=\"/products/add\" component={requireAuth(NewProduct)} />\n      <Route\n        path=\"/products/:id/show\"\n        exact\n        render={props => <Show {...props} />}\n      />\n      {/* <Route\n        path=\"/products/add\"\n        exact\n        render={props => <NewProduct {...props} />}\n      /> */}\n    </Switch>\n  );\n  // ba\n\n  return (\n    <div>\n      <Navigation />\n      <Suspense fallback={<Spinner />}>{routes}</Suspense>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from 'lodash/isEmpty';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n};\n\nexport default (state = initialState, action = {}) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        isAuthenticated: !isEmpty(action.user),\n        user: action.user,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_TO_CART,\n  REMOVE_ITEM,\n  ADD_QUANTITY,\n  SUB_QUANTITY,\n} from '../actions/types';\n\nconst initState = {\n  addedItems: [],\n  total: 0,\n};\n\nconst addCart = (state, action) => {\n  let existed_item = state.addedItems.find(\n    item => action.data._id === item._id\n  );\n\n  if (existed_item) {\n    action.data.quantity += 1;\n    return {\n      ...state,\n      total: state.total + action.data.price,\n    };\n  } else {\n    action.data.quantity = 1;\n    //calculating the total\n    let newTotal = state.total + action.data.price;\n\n    return {\n      ...state,\n      addedItems: [...state.addedItems, action.data],\n      total: newTotal,\n    };\n  }\n};\n\nconst removeCart = (state, action) => {\n  let itemToRemove = state.addedItems.find(item => action.id === item._id);\n  let new_items = state.addedItems.filter(item => action.id !== item._id);\n\n  //calculating the total\n  let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n  console.log(itemToRemove);\n  return {\n    ...state,\n    addedItems: new_items,\n    total: newTotal,\n  };\n};\n\nconst incQty = (state, action) => {\n  let addedItem = state.addedItems.find(item => item._id === action.id);\n  // let addedPrice = state.addedItems.find(item => item._id === action.id);\n  addedItem.quantity += 1;\n  let newTotal = state.total + addedItem.price;\n  return {\n    ...state,\n    total: newTotal,\n  };\n};\n\nconst decQty = (state, action) => {\n  let addedItem = state.addedItems.find(item => item._id === action.id);\n  // let decPrice = state.addedItems.find(item => item._id === action.id);\n  //if the qt == 0 then it should be removed\n  if (addedItem.quantity === 1) {\n    let new_items = state.addedItems.filter(item => item.id !== action.id);\n    // decPrice.price = decPrice.price - addedItem.price;\n    let newTotal = state.total - addedItem.price;\n    return {\n      ...state,\n      addedItems: new_items,\n      total: newTotal,\n    };\n  } else {\n    addedItem.quantity -= 1;\n    let newTotal = state.total - addedItem.price;\n    return {\n      ...state,\n      total: newTotal,\n    };\n  }\n};\n\nconst cart = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return addCart(state, action);\n    case REMOVE_ITEM:\n      return removeCart(state, action);\n    case ADD_QUANTITY:\n      return incQty(state, action);\n    case SUB_QUANTITY:\n      return decQty(state, action);\n    default:\n      return state;\n  }\n};\nexport default cart;\n","import { combineReducers } from 'redux';\nimport auth from '../store/reducers/auth';\nimport cart from '../store/reducers/cart';\n\nexport default combineReducers({\n  auth,\n  cart,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport setAuthorizationToken from './utils/setAuthorization';\nimport jwtDecode from 'jwt-decode';\nimport { setCurrentUser } from './store/actions/login';\nimport rootReducer from './utils/rootReducer';\n\n// const store = createStore((state = {}) => state, applyMiddleware(thunk));\n\nconst composeEnhancers = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n}\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://ecommerce-node-api.herokuapp.com/',\n});\n\nexport default instance;\n","import axios from 'axios';\n\nexport default function setAuthorizationToken(token) {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n","import axios from '../../axios-orders';\nimport setAuthorizationToken from '../../utils/setAuthorization';\nimport jwt from 'jsonwebtoken';\nimport { SET_CURRENT_USER } from './types';\n\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user,\n  };\n}\n\nexport function logout() {\n  return dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n  };\n}\n\nexport function login(data) {\n  return dispatch => {\n    return axios.post('/users/login', data).then(res => {\n      const token = res.data.token;\n      localStorage.setItem('jwtToken', token);\n      setAuthorizationToken(token);\n      dispatch(setCurrentUser(jwt.decode(token)));\n    });\n  };\n}\n"],"sourceRoot":""}