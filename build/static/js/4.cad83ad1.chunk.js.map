{"version":3,"sources":["store/actions/cart.js","components/Cart/Cart.js"],"names":["addToCart","data","type","ADD_TO_CART","removeItem","id","REMOVE_ITEM","addQuantity","ADD_QUANTITY","subtractQuantity","SUB_QUANTITY","ImgCart","styled","img","ProductTable","MDBTable","connect","state","cart","dispatch","product","props","useState","label","field","columns","rows","addedItems","map","item","push","src","image","alt","className","name","price","qty","quantity","amount","button","placement","color","size","onClick","_id","length","center","total","to"],"mappings":"0GAAA,oJAEO,SAASA,EAAUC,GACxB,MAAO,CACLC,KAAMC,IACNF,QAIG,SAASG,EAAWC,GACzB,MAAO,CACLH,KAAMI,IACND,MAIG,SAASE,EAAYF,GAC1B,MAAO,CACLH,KAAMM,IACNH,MAIG,SAASI,EAAiBJ,GAC/B,MAAO,CACLH,KAAMQ,IACNL,Q,sVCNJ,IAAMM,EAAUC,IAAOC,IAAV,KAKPC,EAAeF,YAAOG,IAAPH,CAAH,KAoKHI,uBApBS,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAMC,SAIW,SAAAC,GACzB,MAAO,CACLf,WAAY,SAAAgB,GACVD,EAASf,YAAWgB,KAEtBb,YAAa,SAAAa,GACXD,EAASZ,YAAYa,KAEvBX,iBAAkB,SAAAW,GAChBD,EAASV,YAAiBW,QAKjBJ,EA9JF,SAAAK,GACX,IAYMH,EAAOG,EAAMH,KAbC,EAeFI,mBAAS,CACzB,CACEC,MAAO,GACPC,MAAO,OAET,CACED,MAAO,2CACPC,MAAO,WAET,CACED,MAAO,8CACPC,MAAO,SAET,CACED,MAAO,uCACPC,MAAO,OAET,CACED,MAAO,0CACPC,MAAO,UAET,CACED,MAAO,GACPC,MAAO,YAvBJC,EAfa,oBA0CdC,EAAO,GAwDb,OAvDAR,EAAKS,WAAWC,KAAI,SAAAC,GAClB,OAAOH,EAAKI,KAAK,CACfjB,IAAK,kBAACF,EAAD,CAASoB,IAAKF,EAAKG,MAAOC,IAAI,GAAGC,UAAU,wBAEhDd,QAAS,CACP,wBAAIc,UAAU,QACZ,gCAASL,EAAKM,QAGlBC,MAAM,SAAD,OAAMP,EAAKO,OAChBC,IAAI,GAAD,OAAKR,EAAKS,UACbC,OAAQ,yCAAUV,EAAKS,SAAWT,EAAKO,OACvCI,OACE,oCACE,kBAAC,IAAD,CAAYC,UAAU,OACpB,kBAAC,IAAD,CACEC,MAAM,UACNC,KAAK,KACLC,QAAS,WAxDK,IAAAxB,IAyDMS,EAAKgB,IAxDnCxB,EAAMd,YAAYa,KAoDV,KASA,mDAEF,kBAAC,IAAD,CAAYqB,UAAU,OACpB,kBAAC,IAAD,CACEC,MAAM,OACNC,KAAK,KACLC,QAAS,WAhEU,IAAAxB,IAiEMS,EAAKgB,IAhExCxB,EAAMZ,iBAAiBW,KA4Df,KASA,mDAEF,kBAAC,IAAD,CAAYqB,UAAU,OACpB,kBAAC,IAAD,CACEC,MAAM,SACNC,KAAK,KACLC,QAAS,WApFA,IAAAxB,IAqFMS,EAAKgB,IApF9BxB,EAAMjB,WAAWgB,KAgFT,KASA,mDAOHF,EAAKS,WAAWmB,OAAS,EAC9B,kBAAC,IAAD,CAAQZ,UAAU,iBAAiBa,QAAM,GACvC,kBAAC,IAAD,CAASb,UAAU,SACjB,kBAAC,IAAD,KACE,kBAACpB,EAAD,CAAcoB,UAAU,iBACtB,kBAAC,IAAD,CACEA,UAAU,mBACVQ,MAAM,sBACNjB,QAASA,IAEX,kBAAC,IAAD,CAAcC,KAAMA,OAI1B,yBAAKQ,UAAU,oBACb,6BACE,kBAAC,IAAD,CAAQQ,MAAM,UACZ,4CAAaxB,EAAK8B,SAGtB,kBAAC,IAAD,CAAQN,MAAM,WACZ,kBAAC,IAAD,CAAMO,GAAI,YAAaf,UAAU,cAAjC,sBAKF,kBAAC,IAAD,CAAQQ,MAAM,QACZ,kBAAC,IAAD,CAAMO,GAAI,YAAaf,UAAU,cAAjC,eAON,wBAAIA,UAAU,oBACZ","file":"static/js/4.cad83ad1.chunk.js","sourcesContent":["import { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY } from './types';\n\nexport function addToCart(data) {\n  return {\n    type: ADD_TO_CART,\n    data,\n  };\n}\n\nexport function removeItem(id) {\n  return {\n    type: REMOVE_ITEM,\n    id,\n  };\n}\n\nexport function addQuantity(id) {\n  return {\n    type: ADD_QUANTITY,\n    id,\n  };\n}\n\nexport function subtractQuantity(id) {\n  return {\n    type: SUB_QUANTITY,\n    id,\n  };\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {\n  removeItem,\n  addQuantity,\n  subtractQuantity,\n} from '../../store/actions/cart';\nimport {\n  MDBRow,\n  MDBCard,\n  MDBCardBody,\n  MDBTooltip,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBBtn,\n} from 'mdbreact';\n\nconst ImgCart = styled.img`\n  max-height: 150px;\n  min-width: 50px;\n`;\n\nconst ProductTable = styled(MDBTable)`\n  td {\n    vertical-align: middle;\n  }\n`;\n\nconst Cart = props => {\n  const handleRemove = product => {\n    props.removeItem(product);\n  };\n  //to add the quantity\n  const handleAddQuantity = product => {\n    props.addQuantity(product);\n  };\n  //to substruct from the quantity\n  const handleSubtractQuantity = product => {\n    props.subtractQuantity(product);\n  };\n\n  const cart = props.cart;\n\n  const [columns] = useState([\n    {\n      label: '',\n      field: 'img',\n    },\n    {\n      label: <strong>Product</strong>,\n      field: 'product',\n    },\n    {\n      label: <strong>Unit Price</strong>,\n      field: 'price',\n    },\n    {\n      label: <strong>QTY</strong>,\n      field: 'qty',\n    },\n    {\n      label: <strong>Amount</strong>,\n      field: 'amount',\n    },\n    {\n      label: '',\n      field: 'button',\n    },\n  ]);\n\n  const rows = [];\n  cart.addedItems.map(item => {\n    return rows.push({\n      img: <ImgCart src={item.image} alt=\"\" className=\"img-fluid z-depth-0\" />,\n\n      product: [\n        <h5 className=\"mt-3\">\n          <strong>{item.name}</strong>\n        </h5>,\n      ],\n      price: `₦${item.price}`,\n      qty: `${item.quantity}`,\n      amount: <strong>₦{item.quantity * item.price}</strong>,\n      button: (\n        <>\n          <MDBTooltip placement=\"top\">\n            <MDBBtn\n              color=\"success\"\n              size=\"sm\"\n              onClick={() => {\n                handleAddQuantity(item._id);\n              }}\n            >\n              +\n            </MDBBtn>\n            <div>Increase quantity</div>\n          </MDBTooltip>\n          <MDBTooltip placement=\"top\">\n            <MDBBtn\n              color=\"info\"\n              size=\"sm\"\n              onClick={() => {\n                handleSubtractQuantity(item._id);\n              }}\n            >\n              -\n            </MDBBtn>\n            <div>Decrease quantity</div>\n          </MDBTooltip>\n          <MDBTooltip placement=\"top\">\n            <MDBBtn\n              color=\"danger\"\n              size=\"sm\"\n              onClick={() => {\n                handleRemove(item._id);\n              }}\n            >\n              X\n            </MDBBtn>\n            <div>Remove item</div>\n          </MDBTooltip>\n        </>\n      ),\n    });\n  });\n\n  return cart.addedItems.length > 0 ? (\n    <MDBRow className=\"my-2 ml-3 mr-1\" center>\n      <MDBCard className=\"w-100\">\n        <MDBCardBody>\n          <ProductTable className=\"product-table\">\n            <MDBTableHead\n              className=\"font-weight-bold\"\n              color=\"mdb-color lighten-5\"\n              columns={columns}\n            />\n            <MDBTableBody rows={rows} />\n          </ProductTable>\n        </MDBCardBody>\n      </MDBCard>\n      <div className=\"mt-3 text-center\">\n        <div>\n          <MDBBtn color=\"danger\">\n            <h4>Total: ₦{cart.total}</h4>\n          </MDBBtn>\n        </div>\n        <MDBBtn color=\"success\">\n          <Link to={'/products'} className=\"text-reset\">\n            Buy more products\n          </Link>\n        </MDBBtn>\n\n        <MDBBtn color=\"info\">\n          <Link to={'/checkout'} className=\"text-reset\">\n            Checkout\n          </Link>\n        </MDBBtn>\n      </div>\n    </MDBRow>\n  ) : (\n    <h3 className=\"text-center my-5\">\n      <strong>Your cart is empty!!!</strong>\n    </h3>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeItem: product => {\n      dispatch(removeItem(product));\n    },\n    addQuantity: product => {\n      dispatch(addQuantity(product));\n    },\n    subtractQuantity: product => {\n      dispatch(subtractQuantity(product));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n"],"sourceRoot":""}