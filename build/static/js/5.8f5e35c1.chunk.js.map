{"version":3,"sources":["store/actions/cart.js","components/Products/Body/Body.js","components/Products/Products.js"],"names":["addToCart","data","type","ADD_TO_CART","removeItem","id","REMOVE_ITEM","addQuantity","ADD_QUANTITY","subtractQuantity","SUB_QUANTITY","connect","dispatch","product","props","className","style","maxHeight","ecommerce","wide","cascade","top","alt","src","obj","image","waves","name","color","to","_id","price","placement","tag","onClick","alert","size","icon","state","auth","useState","setProduct","redirect","setRedirect","isAuthenticated","userLinks","outline","guestLinks","useEffect","a","axios","get","response","console","log","fetchData","map","object","i","key"],"mappings":"0GAAA,oJAEO,SAASA,EAAUC,GACxB,MAAO,CACLC,KAAMC,IACNF,QAIG,SAASG,EAAWC,GACzB,MAAO,CACLH,KAAMI,IACND,MAIG,SAASE,EAAYF,GAC1B,MAAO,CACLH,KAAMM,IACNH,MAIG,SAASI,EAAiBJ,GAC/B,MAAO,CACLH,KAAMQ,IACNL,Q,6ICqDWM,cACb,MATyB,SAAAC,GACzB,MAAO,CACLZ,UAAW,SAAAa,GACTD,EAASZ,YAAUa,QAKVF,EA/DF,SAAAG,GAMX,OACE,kBAAC,IAAD,CAAQC,UAAU,iBAChB,kBAAC,IAAD,CACEA,UAAU,oBACVC,MAAO,CAAEC,UAAW,SACpBC,WAAS,EACTC,MAAI,GAEJ,kBAAC,IAAD,CAAcC,SAAO,EAACC,KAAG,EAACC,IAAI,GAAGC,IAAKT,EAAMU,IAAIC,MAAOC,OAAK,IAC5D,6BACA,kBAAC,IAAD,CAAaN,SAAO,EAACL,UAAU,eAC7B,kBAAC,IAAD,KACE,2BACE,gCAASD,EAAMU,IAAIG,QAEP,IAChB,kBAAC,IAAD,CAAQC,MAAM,WACZ,kBAAC,IAAD,CACEC,GAAI,aAAef,EAAMU,IAAIM,IAAM,QACnCf,UAAU,cAFZ,cAOF,kBAAC,IAAD,KACE,0BAAMA,UAAU,cAAhB,gBAAsCD,EAAMU,IAAIO,OAChD,0BAAMhB,UAAU,eACd,kBAAC,IAAD,CAAYiB,UAAU,OACpB,kBAAC,IAAD,CAEEC,IAAI,IACJC,QAAS,WApCL,IAAArB,IAqCUC,EAAMU,IApClCV,EAAMd,UAAUa,GAChBsB,MAAM,0BAqCQC,KAAK,KACLrB,UAAU,0BAEV,kBAAC,IAAD,CAASsB,KAAK,mBAEhB,qDC0BD1B,uBANf,SAAyB2B,GACvB,MAAO,CACLC,KAAMD,EAAMC,QAMd,KAFa5B,EAxEE,SAAAG,GAAU,IAAD,EACM0B,mBAAS,MADf,mBACjB3B,EADiB,KACR4B,EADQ,OAEQD,oBAAS,GAFjB,mBAEjBE,EAFiB,KAEPC,EAFO,KAIhBC,EAAoB9B,EAAMyB,KAA1BK,gBAEFC,EACJ,uBAAG9B,UAAU,QACX,kBAAC,IAAD,CAAQ+B,SAAO,EAAClB,MAAM,UAAUb,UAAU,QACxC,kBAAC,IAAD,CAASsB,KAAK,QAAQtB,UAAU,SAAkB,IAClD,kBAAC,IAAD,CAAMc,GAAG,iBAAT,qBAKAkB,EAAa,8BAEnBC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,+EAESC,IAAMC,IAAI,YAFnB,OAERC,EAFQ,OAGdX,EAAWW,EAASnD,MACpB0C,GAAY,GAJE,gDAMdU,QAAQC,IAAR,MANc,yDAAH,qDASfC,KACC,CAACzC,IAWJ,OAAI4B,EACK,kBAAC,IAAD,CAAUb,GAAI,WAIrB,oCACE,kBAAC,IAAD,CAAcd,UAAU,oBACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,wBAAIA,UAAU,gBAAd,oBACA,wBAAIA,UAAU,SACb6B,EAAkBC,EAAYE,KAKrC,kBAAC,IAAD,KAxBFlC,GACAA,EAAQ2C,KAAI,SAASC,EAAQC,GAC3B,OAAO,kBAAC,EAAD,CAAMlC,IAAKiC,EAAQE,IAAKD","file":"static/js/5.8f5e35c1.chunk.js","sourcesContent":["import { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY } from './types';\n\nexport function addToCart(data) {\n  return {\n    type: ADD_TO_CART,\n    data,\n  };\n}\n\nexport function removeItem(id) {\n  return {\n    type: REMOVE_ITEM,\n    id,\n  };\n}\n\nexport function addQuantity(id) {\n  return {\n    type: ADD_QUANTITY,\n    id,\n  };\n}\n\nexport function subtractQuantity(id) {\n  return {\n    type: SUB_QUANTITY,\n    id,\n  };\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addToCart } from '../../../store/actions/cart';\nimport {\n  MDBBtn,\n  MDBCol,\n  MDBIcon,\n  MDBCard,\n  MDBCardBody,\n  MDBCardImage,\n  MDBCardTitle,\n  MDBCardFooter,\n  MDBTooltip,\n} from 'mdbreact';\n\nconst Body = props => {\n  const handleClick = product => {\n    props.addToCart(product);\n    alert('Item added to cart!!!');\n  };\n\n  return (\n    <MDBCol className=\"col-md-3 pb-1\">\n      <MDBCard\n        className=\"mb-lg-0 mb-4 pb-2\"\n        style={{ maxHeight: '34rem' }}\n        ecommerce\n        wide\n      >\n        <MDBCardImage cascade top alt=\"\" src={props.obj.image} waves />\n        <hr />\n        <MDBCardBody cascade className=\"text-center\">\n          <MDBCardTitle>\n            <p>\n              <strong>{props.obj.name}</strong>\n            </p>\n          </MDBCardTitle>{' '}\n          <MDBBtn color=\"primary\">\n            <Link\n              to={'/products/' + props.obj._id + '/show'}\n              className=\"text-reset\"\n            >\n              More Info\n            </Link>\n          </MDBBtn>\n          <MDBCardFooter>\n            <span className=\"float-left\">Price: â‚¦{props.obj.price}</span>\n            <span className=\"float-right\">\n              <MDBTooltip placement=\"top\">\n                <MDBBtn\n                  // href=\"/cart\"\n                  tag=\"a\"\n                  onClick={() => {\n                    handleClick(props.obj);\n                  }}\n                  size=\"lg\"\n                  className=\"p-1 m-0 mr-2 z-depth-0\"\n                >\n                  <MDBIcon icon=\"shopping-cart\" />\n                </MDBBtn>\n                <div>Add to Cart</div>\n              </MDBTooltip>\n            </span>\n          </MDBCardFooter>\n        </MDBCardBody>\n      </MDBCard>\n    </MDBCol>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: product => {\n      dispatch(addToCart(product));\n    },\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Body);\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from '../../axios-orders';\nimport Body from './Body/Body';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  MDBJumbotron,\n  MDBBtn,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBIcon,\n} from 'mdbreact';\n\nconst Products = props => {\n  const [product, setProduct] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n\n  const { isAuthenticated } = props.auth;\n\n  const userLinks = (\n    <p className=\"lead\">\n      <MDBBtn outline color=\"primary\" className=\"mb-5\">\n        <MDBIcon icon=\"clone\" className=\"mr-2\"></MDBIcon>{' '}\n        <Link to=\"/products/add\">Add New Product</Link>\n      </MDBBtn>\n    </p>\n  );\n\n  const guestLinks = <div></div>;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('products');\n        setProduct(response.data);\n        setRedirect(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [props]);\n\n  const tabRow = () => {\n    return (\n      product &&\n      product.map(function(object, i) {\n        return <Body obj={object} key={i} />;\n      })\n    );\n  };\n\n  if (redirect) {\n    return <Redirect to={'/login'} />;\n  }\n\n  return (\n    <>\n      <MDBContainer className=\"mt-3 text-center\">\n        <MDBRow>\n          <MDBCol>\n            <MDBJumbotron>\n              <h2 className=\"h1 display-3\">Wismart products</h2>\n              <hr className=\"my-2\" />\n              {isAuthenticated ? userLinks : guestLinks}\n            </MDBJumbotron>\n          </MDBCol>\n        </MDBRow>\n\n        <MDBRow>{tabRow()}</MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nProducts.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Products);\n"],"sourceRoot":""}