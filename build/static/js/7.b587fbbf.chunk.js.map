{"version":3,"sources":["containers/Register/Register.js","components/Register/RegisterPage.js","store/actions/register.js"],"names":["Register","props","useState","firstname","setFirstname","lastname","setLastname","email","setEmail","phonenumber","setPhonenumber","password","setPassword","redirect","setRedirect","handleSubmit","event","a","preventDefault","data","userRegisterRequest","console","log","to","className","sm","md","lg","onSubmit","label","icon","group","type","validate","error","success","value","onChange","target","color","connect","dispatch","axios","post","then","res","user","token","localStorage","setItem","setAuthorizationToken","jwt","decode","SET_CURRENT_USER"],"mappings":"6LAmIeA,EArHE,SAAAC,GAAU,IAAD,EACUC,mBAAS,IADnB,mBACjBC,EADiB,KACNC,EADM,OAEQF,mBAAS,IAFjB,mBAEjBG,EAFiB,KAEPC,EAFO,OAGEJ,mBAAS,IAHX,mBAGjBK,EAHiB,KAGVC,EAHU,OAIcN,mBAAS,IAJvB,mBAIjBO,EAJiB,KAIJC,EAJI,OAKQR,mBAAS,IALjB,mBAKjBS,EALiB,KAKPC,EALO,OAMQV,oBAAS,GANjB,mBAMjBW,EANiB,KAMPC,EANO,KAclBC,EAAY,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACnBD,EAAME,iBACAC,EAAO,CACXhB,YACAE,WACAE,QACAE,cACAE,YAPiB,kBAUXV,EAAMmB,oBAAoBD,GAVf,OAWjBL,GAAY,GAXK,gDAajBO,QAAQC,IAAR,MAbiB,yDAAH,sDAiBlB,OAAIT,EACK,kBAAC,IAAD,CAAUU,GAAI,cAIrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,UAAU,gDAChB,kBAAC,IAAD,CAAQA,UAAU,OAAOC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACzC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,0BAAMC,SAAUb,GACd,uBAAGS,UAAU,uBAAb,WACA,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEK,MAAM,aACNC,KAAK,OACLC,OAAK,EACLC,KAAK,OACLC,UAAQ,EACRC,MAAM,QACNC,QAAQ,QACRC,MAAOjC,EACPkC,SA7CY,SAAArB,GAAK,OAAIZ,EAAaY,EAAMsB,OAAOF,UA+CjD,kBAAC,IAAD,CACEP,MAAM,YACNC,KAAK,OACLC,OAAK,EACLC,KAAK,OACLC,UAAQ,EACRC,MAAM,QACNC,QAAQ,QACRC,MAAO/B,EACPgC,SAvDW,SAAArB,GAAK,OAAIV,EAAYU,EAAMsB,OAAOF,UAyD/C,kBAAC,IAAD,CACEP,MAAM,aACNC,KAAK,WACLC,OAAK,EACLC,KAAK,QACLC,UAAQ,EACRC,MAAM,QACNC,QAAQ,QACRC,MAAO7B,EACP8B,SAjEQ,SAAArB,GAAK,OAAIR,EAASQ,EAAMsB,OAAOF,UAmEzC,kBAAC,IAAD,CACEP,MAAM,oBACNC,KAAK,OACLC,OAAK,EACLC,KAAK,SACLC,UAAQ,EACRC,MAAM,QACNC,QAAQ,QACRC,MAAO3B,EACP4B,SA3Ec,SAAArB,GAAK,OAAIN,EAAeM,EAAMsB,OAAOF,UA6ErD,kBAAC,IAAD,CACEP,MAAM,gBACNC,KAAK,OACLC,OAAK,EACLC,KAAK,WACLC,UAAQ,EAERG,MAAOzB,EACP0B,SApFW,SAAArB,GAAK,OAAIJ,EAAYI,EAAMsB,OAAOF,WAuFjD,yBAAKZ,UAAU,yBACb,kBAAC,IAAD,CAAQe,MAAM,OAAOP,KAAK,UAA1B,oB,0CC/FHQ,sBACb,KACA,CAAEpB,oBCTG,SAA6BD,GAClC,OAAO,SAAAsB,GACL,OAAOC,IAAMC,KAAK,SAAUxB,GAAMyB,MAAK,SAAAC,GACrC,IAVyBC,EAUnBC,EAAQF,EAAI1B,KAAK4B,MACvBC,aAAaC,QAAQ,WAAYF,GACjCG,YAAsBH,GACtBN,GAbyBK,EAaDK,IAAIC,OAAOL,GAZhC,CACLf,KAAMqB,IACNP,gBDWWN,EAbM,SAAAvC,GAAU,IACrBmB,EAAwBnB,EAAxBmB,oBACR,OACE,6BACE,kBAAC,EAAD,CAAUA,oBAAqBA","file":"static/js/7.b587fbbf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBInput,\n  MDBCard,\n  MDBCardBody,\n} from 'mdbreact';\n\nconst Register = props => {\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [email, setEmail] = useState('');\n  const [phonenumber, setPhonenumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  const handleFirstnameChange = event => setFirstname(event.target.value);\n  const handleLastnameChange = event => setLastname(event.target.value);\n  const handleEmailChange = event => setEmail(event.target.value);\n  const handlePhonenumberChange = event => setPhonenumber(event.target.value);\n  const handlePasswordChange = event => setPassword(event.target.value);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = {\n      firstname,\n      lastname,\n      email,\n      phonenumber,\n      password,\n    };\n    try {\n      await props.userRegisterRequest(data);\n      setRedirect(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (redirect) {\n    return <Redirect to={'/products'} />;\n  }\n\n  return (\n    <MDBContainer>\n      <MDBRow className=\"d-flex justify-content-center mb-5 py-3 px-5\">\n        <MDBCol className=\"mt-3\" sm=\"12\" md=\"8\" lg=\"6\">\n          <MDBCard>\n            <MDBCardBody>\n              <form onSubmit={handleSubmit}>\n                <p className=\"h4 text-center py-2\">Sign up</p>\n                <div className=\"grey-text\">\n                  <MDBInput\n                    label=\"First name\"\n                    icon=\"user\"\n                    group\n                    type=\"text\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                    value={firstname}\n                    onChange={handleFirstnameChange}\n                  />\n                  <MDBInput\n                    label=\"Last name\"\n                    icon=\"user\"\n                    group\n                    type=\"text\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                    value={lastname}\n                    onChange={handleLastnameChange}\n                  />\n                  <MDBInput\n                    label=\"Your email\"\n                    icon=\"envelope\"\n                    group\n                    type=\"email\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                    value={email}\n                    onChange={handleEmailChange}\n                  />\n                  <MDBInput\n                    label=\"Your phone-number\"\n                    icon=\"user\"\n                    group\n                    type=\"number\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                    value={phonenumber}\n                    onChange={handlePhonenumberChange}\n                  />\n                  <MDBInput\n                    label=\"Your password\"\n                    icon=\"lock\"\n                    group\n                    type=\"password\"\n                    validate\n                    // placeholder=\"password\"\n                    value={password}\n                    onChange={handlePasswordChange}\n                  />\n                </div>\n                <div className=\"text-center py-2 mt-2\">\n                  <MDBBtn color=\"cyan\" type=\"submit\">\n                    Register\n                  </MDBBtn>\n                </div>\n              </form>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nRegister.propTypes = {\n  userRegisterRequest: PropTypes.func.isRequired,\n};\n\nexport default Register;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Register from '../../containers/Register/Register';\nimport { userRegisterRequest } from '../../store/actions/register';\n\nconst RegisterPage = props => {\n  const { userRegisterRequest } = props;\n  return (\n    <div>\n      <Register userRegisterRequest={userRegisterRequest} />\n    </div>\n  );\n};\n\nRegisterPage.propTypes = {\n  userRegisterRequest: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  { userRegisterRequest }\n)(RegisterPage);\n","import axios from '../../axios-orders';\nimport setAuthorizationToken from '../../utils/setAuthorization';\nimport jwt from 'jsonwebtoken';\nimport { SET_CURRENT_USER } from './types';\n\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user,\n  };\n}\n\nexport function userRegisterRequest(data) {\n  return dispatch => {\n    return axios.post('/users', data).then(res => {\n      const token = res.data.token;\n      localStorage.setItem('jwtToken', token);\n      setAuthorizationToken(token);\n      dispatch(setCurrentUser(jwt.decode(token)));\n    });\n  };\n}\n"],"sourceRoot":""}